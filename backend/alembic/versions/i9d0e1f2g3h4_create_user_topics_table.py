"""Create user_topics table

Revision ID: i9d0e1f2g3h4
Revises: h8c9d0e1f2g3
Create Date: 2025-01-20 21:30:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "i9d0e1f2g3h4"
down_revision = "h8c9d0e1f2g3"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user_topics",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("user_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("topic", sa.String(length=100), nullable=False),
        sa.Column("color", sa.String(length=7), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_user_topics_user_id"), "user_topics", ["user_id"], unique=False
    )
    op.create_index(
        op.f("ix_user_topics_topic"), "user_topics", ["topic"], unique=False
    )
    # Create unique constraint on user_id + topic to prevent duplicates
    op.create_index(
        "ix_user_topics_user_id_topic_unique",
        "user_topics",
        ["user_id", "topic"],
        unique=True,
    )

    # Enable RLS on user_topics table
    op.execute("ALTER TABLE user_topics ENABLE ROW LEVEL SECURITY")

    # Create RLS policy for user_topics
    op.execute(
        """
        CREATE POLICY user_topics_policy ON user_topics
        FOR ALL
        TO authenticated
        USING (user_id = auth.uid())
        WITH CHECK (user_id = auth.uid())
    """
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("ix_user_topics_user_id_topic_unique", table_name="user_topics")
    op.drop_index(op.f("ix_user_topics_topic"), table_name="user_topics")
    op.drop_index(op.f("ix_user_topics_user_id"), table_name="user_topics")
    op.drop_table("user_topics")
    # ### end Alembic commands ###
