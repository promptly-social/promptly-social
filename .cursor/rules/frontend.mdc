---
description:
globs: frontend/**/*
alwaysApply: false
---

- consider reusability and multiple environment deployment
- follow the best practices in React
- avoid unnecessary re-rendering
- always write tests
- when you get stuck, try a different approach
- follow the best file structure conventions for a monorepo
- always use the latest version of packages when possible
- always create reusable components, types, hooks, etc.
- always check and update the dockerfile when unnecessary \* Separation of concerns
- DRY (Don't Repeat Yourself) principles
- Consistent error handling
- Type safety throughout the application
- Update the corresponding tests when you make changes
- The logs should follow SOC-II and GDPR standards

Design Principles to Follow
Law Apply by…
Aesthetic Usability Use spacing/typography to make forms feel easier
Hick’s Law Avoid clutter; collapse complex settings
Jakob’s Law Stick to familiar WP Admin patterns (cards, sidebars, modals)
Fitts’s Law Place important buttons close, large, clear
Law of Proximity Group logic and inputs with spacing + PanelBody + layout components
Zeigarnik Effect Use progress indicators, save states
Goal-Gradient Emphasize progress in wizards (e.g. New Rule flow)
Law of Similarity Ensure toggles, selectors, filters share styling and layout conventions
Aesthetic-Usability Effect
Clean, consistent spacing (e.g. gap-2, px-4)

Typography hierarchy (e.g. headings text-lg font-semibold)

Visual cues like subtle shadows or border separators improve perceived usability

Hick's Law
Reduce visible options per screen

Collapse complex filters/conditions into toggles or expandable sections

Jakob’s Law
Match WordPress admin conventions (e.g. table lists, modals, top bar)

Stick to familiar placement of "Add New", status toggles, and trash icons

Fitts’s Law
Important actions (edit, delete) should be large, clickable buttons

Avoid tiny icon-only targets unless they are grouped and spaced (space-x-2)

Law of Proximity
Group related controls using spacing + containers (e.g. PanelBody, Card)

Inputs related to conditions or filters should be visually bundled

Zeigarnik Effect
Show progress in multi-step rule creation (stepper, breadcrumb, or "Step X of Y")

Save state feedback (e.g. "Saving..." or "Unsaved changes" banners)

Goal-Gradient Effect
Emphasize next step in workflows (highlight active step, primary button styling)

Use progress bars or steppers to encourage completion

Law of Similarity
Use consistent styles for toggle switches, buttons, badges, filters

Align icon sizing and spacing across all rows for visual rhythm

Miller's Law
Don’t overload the user with options; chunk rule configuration into steps/panels

Default to collapsed sections (e.g. advanced options)

Doherty Threshold
Aim for sub-400ms interactions (e.g. loading skeletons, optimistic UI)

Use loading states with spinners or shimmer placeholders
