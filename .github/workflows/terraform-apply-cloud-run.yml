name: Terraform Apply Cloud Run

on:
  workflow_call:
    inputs:
      environment:
        description: "Environment (staging/production)"
        required: true
        type: string
      image_tag:
        description: "Docker image tag to deploy"
        required: true
        type: string

env:
  TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }}
  TF_VAR_region: ${{ secrets.GCP_REGION }}
  TF_VAR_environment: ${{ inputs.environment }}
  TF_VAR_image_tag: ${{ inputs.image_tag }}

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    outputs:
      service_url: ${{ steps.tf_output.outputs.service_url }}

    permissions:
      contents: read
      id-token: write

    defaults:
      run:
        working-directory: ./terraform/environments/${{ inputs.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Authenticate to Google Cloud (Keyless)
        uses: "google-github-actions/auth@v2"
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_TERRAFORM_SA_EMAIL }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Configure Terraform backend
        run: |
          # Update backend configuration with the bucket name
          sed -i.bak 's/bucket = ""/bucket = "${{ secrets.GCP_TERRAFORM_STATE_BUCKET }}"/' backend.tf
          rm backend.tf.bak

      - name: Create terraform.tfvars
        run: |
          # Copy from environment-specific template
          cp terraform.tfvars terraform.tfvars.auto

          # Override with GitHub secrets
          sed -i.bak "s/your-gcp-project-id/${{ secrets.GCP_PROJECT_ID }}/" terraform.tfvars.auto
          sed -i.bak "s/us-central1/${{ secrets.GCP_REGION }}/" terraform.tfvars.auto

          # Add CORS origins
          echo 'cors_origins = ["${{ secrets.FRONTEND_URL }}"]' >> terraform.tfvars.auto

          rm terraform.tfvars.auto.bak

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve "-var=image_tag=${{ inputs.image_tag }}"

      - name: Set Terraform Outputs
        id: tf_output
        run: |
          echo "service_url=$(terraform output -raw cloud_run_service_url)" >> $GITHUB_OUTPUT

      - name: Output Terraform Values
        run: |
          echo "## Terraform Outputs" >> $GITHUB_STEP_SUMMARY
          echo "```" >> $GITHUB_STEP_SUMMARY
          terraform output >> $GITHUB_STEP_SUMMARY
          echo "```" >> $GITHUB_STEP_SUMMARY
